{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftSearchApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GiftSearchApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAMaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,KAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBF,OACE,sBAAMC,SAXc,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAS,IAEpBP,GAAc,SAAAQ,GAAI,OAAIN,GAAJ,mBAAkBM,OACpCL,EAAc,MAMtB,SACI,uBACEM,KAAK,OACLC,MAAQR,EACRS,SAnBoB,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACqCC,UAAUH,GAD/C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGtC,OACE,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHAO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACtB,ECHwB,SAACA,GAEzB,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAjBAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,YAO1B,CAACpB,IAEGqB,EDtB2BM,CAAa3B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAGvB,OACC,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,uBACb,qBAAKA,UAAU,WAAf,SACM,6BAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAESA,GADCA,EAAIC,eEZzBiB,EAAgB,WAE5B,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAIC,OACE,gCAEI,6CACA,uBACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEI2C,EAAWpB,KAAI,SAAET,GAAF,OACb,cAAC,EAAD,CAEGA,SAAWA,GADLA,YCjBvB8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.bc030091.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\n\r\n\r\nimport PropTypes  from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setinputValue] = useState(\" \");\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit= (e) =>{\r\n        e.preventDefault();\r\n        if (inputValue.length > 2) {\r\n\r\n            setCategories(cats =>[inputValue,...cats]);\r\n            setinputValue('');\r\n            \r\n        }\r\n        \r\n    }\r\n  return (\r\n    <form onSubmit={ handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={ inputValue }\r\n          onChange={ handleInputChange}\r\n        />\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${  encodeURI(category) }&limit=10&api_key=ynbaSfrPqCd3UFg8DxCF3nGIJuyiSYnT`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n     \r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n // console.log(id, title, url);  \r\n  return (\r\n    <div className='card animate__animated animate__bounce'>\r\n        <img src={ url } alt={ title} />\r\n        <p>{ title}</p>\r\n    </div>\r\n  );\r\n};\r\n","//import React,{useEffect, useState}  from 'react';\r\n//import { getGifs} from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data: images, loading } = useFetchGifs(category );\r\n    \r\n   \r\n   return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n      { loading && <p className='animate__animated animate__flash'>Loading..</p>  }\r\n      <div className='cardGrid'>\r\n            <ol>\r\n                {\r\n                    images.map((img) =>(\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img }\r\n                        \r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </ol>\r\n            </div>        \r\n     \r\n    </>\r\n    \r\n   );\r\n};\r\n\r\n\r\n","\r\nimport {useEffect, useState}  from 'react';\r\nimport { getGifs} from '../helpers/getGifs';\r\nexport const useFetchGifs = (category ) => {\r\n  \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n    \r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs  => {\r\n\r\n                setTimeout(() => {\r\n                    //console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                    \r\n                });\r\n                \r\n            }); // .then( setImages );\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","\r\nimport React,{useState} from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nexport const GiftSearchApp = () => {\r\n \r\n const [categories, setCategories] = useState(['One Piece']);\r\n\r\n \r\n \r\n  return (\r\n    <div>\r\n\r\n        <h2>GifSearcApp</h2>\r\n        <hr/>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <ol>\r\n          {\r\n            categories.map(( category) =>(\r\n              <GifGrid \r\n                 key={ category}\r\n                 category={ category }\r\n              />\r\n\r\n            ))\r\n          }\r\n        </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftSearchApp } from './GiftSearchApp';\n\nReactDOM.render(\n  \n    <GiftSearchApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}